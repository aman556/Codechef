#include <iostream>
 #include<bits/stdc++.h>
using namespace std;
vector<vector<int>> v(200001);
int ans=0;
int vis[200001];
int dfs(int n){
    if(vis[n])
        return 0;
    vis[n]=1;
    int dis=0;
    priority_queue<int> p;
    for(int i=0;i<v[n].size();i++){
        int chdis=dfs(v[n][i]);
        p.push(chdis);
        dis=max(dis,chdis);
    }
    if(p.size()>1)
    {
        int a=p.top();
        p.pop();
        int b=p.top();
        ans=max(ans,a+b);
    }
    return 1+dis;
} 
int main()
{
   int n1,x,y,root=1;
   cin>>n1;
    for(int i=0;i<n1-1;i++){
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    
    for(int i=1;i<=n1;i++){
        if(v[root].size()<v[i].size())
            root=i;
    }
    
    if(n1>2){
    
        dfs(root);
    
    }
    if(n1==2)
    ans++;
    cout<<ans;
    return 0;
}