#include <iostream>
#include<bits/stdc++.h>
using namespace std;
const int N = 1e5+10;
int vis[N],par[N];
int n,m,x,y,f=0;
vector<vector<int>> v(N);
   vector<int> p1;
   
void dfs(int i){
    if(f!=0){
        
        return;
    }    
    vis[i]=1;
    
    for(int j=0;j<v[i].size();j++){
        if(!vis[v[i][j]]){
            par[v[i][j]]=i;
            //p.push_back(v[i][j]);
            dfs(v[i][j]);
        }
        else if(f==0&&vis[v[i][j]]==1&&par[i]!=v[i][j]&&par[i]!=-1){
            //p.push_back(v[i][j]);
            f=v[i][j];
            /*for(int i=p.size()-1;i>=0;i--){
           p1.push_back(p[i]);
           if(p[i]==f&&i<p.size()-1)
                break;
       }*/
       int cur = i;
         
          p1.push_back(i);
          
          while(par[cur] != v[i][j])
          {
             cur = par[cur];
             p1.push_back(cur);
          }
          
          p1.push_back(v[i][j]);
          p1.push_back(i);
       cout<<p1.size()<<endl;
       for(int i=p1.size()-1;i>=0;i--){
           cout<<p1[i]<<" ";
       }
            exit(0);
        }
    }
}   
   
int main()
{
   
   cin>>n>>m;
   
   for(int i=0;i<m;i++){
       cin>>x>>y;
       v[x].push_back(y);
       v[y].push_back(x);
   }
   //vector<int> p;
   for(int i=1;i<=n;i++)
        if(f==0&&vis[i]==0){
            par[i]=-1;
            //p.push_back(i);
            dfs(i);
        }
   
   if(f==0)
       cout<<"IMPOSSIBLE"; 
   else{
       
       cout<<endl;
   }
   return 0;
}